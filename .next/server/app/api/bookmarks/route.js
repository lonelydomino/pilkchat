"use strict";(()=>{var e={};e.id=324,e.ids=[324],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},63477:e=>{e.exports=require("querystring")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},32943:(e,r,s)=>{s.r(r),s.d(r,{headerHooks:()=>g,originalPathname:()=>q,patchFetch:()=>y,requestAsyncStorage:()=>k,routeModule:()=>m,serverHooks:()=>w,staticGenerationAsyncStorage:()=>x,staticGenerationBailout:()=>h});var t={};s.r(t),s.d(t,{GET:()=>c});var a=s(95419),i=s(69108),o=s(99678),n=s(78070),u=s(53524),p=s(81355),d=s(50442);let l=new u.PrismaClient;async function c(e){try{let e=await (0,p.getServerSession)(d.L);if(!e?.user?.id)return n.Z.json({error:"Unauthorized"},{status:401});let r=await l.bookmark.findMany({where:{userId:e.user.id},include:{post:{include:{author:{select:{id:!0,name:!0,username:!0,image:!0}},_count:{select:{likes:!0,comments:!0,reposts:!0}}}}},orderBy:{createdAt:"desc"}}),s=await Promise.all(r.map(async r=>{let[s,t]=await Promise.all([l.like.findUnique({where:{userId_postId:{userId:e.user.id,postId:r.post.id}}}),l.repost.findUnique({where:{userId_postId:{userId:e.user.id,postId:r.post.id}}})]);return{...r.post,isLiked:!!s,isReposted:!!t,isBookmarked:!0}}));return n.Z.json({posts:s})}catch(e){return console.error("Error fetching bookmarks:",e),n.Z.json({error:"Failed to fetch bookmarks"},{status:500})}}let m=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/bookmarks/route",pathname:"/api/bookmarks",filename:"route",bundlePath:"app/api/bookmarks/route"},resolvedPagePath:"/Users/michaelmartinez/My Stuff/Software Development/BlueSky Clone/app/api/bookmarks/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:k,staticGenerationAsyncStorage:x,serverHooks:w,headerHooks:g,staticGenerationBailout:h}=m,q="/api/bookmarks/route";function y(){return(0,o.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:x})}},50442:(e,r,s)=>{s.d(r,{L:()=>l,Z:()=>c});var t=s(81355),a=s.n(t),i=s(65822),o=s(53524),n=s(86485),u=s(6521),p=s.n(u);let d=new o.PrismaClient,l={adapter:(0,i.N)(d),providers:[(0,n.Z)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)return null;let r=await d.user.findUnique({where:{email:e.email}});return r&&r.password&&await p().compare(e.password,r.password)?{id:r.id,email:r.email||"",name:r.name||"",username:r.username}:null}})],session:{strategy:"jwt",maxAge:2592e3,updateAge:86400},callbacks:{jwt:async({token:e,user:r})=>(r&&(e.username=r.username),e),session:async({session:e,token:r})=>(r&&(e.user.id=r.sub,e.user.username=r.username),e),redirect:async({url:e,baseUrl:r})=>e.startsWith("/")?`${r}${e}`:new URL(e).origin===r?e:r},pages:{signIn:"/login",signUp:"/signup"},secret:process.env.NEXTAUTH_SECRET},c=a()(l)}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[1638,6206,6521,9155],()=>s(32943));module.exports=t})();